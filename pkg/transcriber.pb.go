// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: transcriber.proto

package transcriberv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TranscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      string                 `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	WavFile       []byte                 `protobuf:"bytes,2,opt,name=wav_file,json=wavFile,proto3" json:"wav_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscribeRequest) Reset() {
	*x = TranscribeRequest{}
	mi := &file_transcriber_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeRequest) ProtoMessage() {}

func (x *TranscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcriber_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeRequest.ProtoReflect.Descriptor instead.
func (*TranscribeRequest) Descriptor() ([]byte, []int) {
	return file_transcriber_proto_rawDescGZIP(), []int{0}
}

func (x *TranscribeRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *TranscribeRequest) GetWavFile() []byte {
	if x != nil {
		return x.WavFile
	}
	return nil
}

type Segment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartMs       int64                  `protobuf:"varint,1,opt,name=start_ms,json=startMs,proto3" json:"start_ms,omitempty"`
	EndMs         int64                  `protobuf:"varint,2,opt,name=end_ms,json=endMs,proto3" json:"end_ms,omitempty"`
	Text          string                 `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment) Reset() {
	*x = Segment{}
	mi := &file_transcriber_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_transcriber_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_transcriber_proto_rawDescGZIP(), []int{1}
}

func (x *Segment) GetStartMs() int64 {
	if x != nil {
		return x.StartMs
	}
	return 0
}

func (x *Segment) GetEndMs() int64 {
	if x != nil {
		return x.EndMs
	}
	return 0
}

func (x *Segment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_transcriber_proto protoreflect.FileDescriptor

const file_transcriber_proto_rawDesc = "" +
	"\n" +
	"\x11transcriber.proto\x12\x0etranscriber.v1\"J\n" +
	"\x11TranscribeRequest\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\x19\n" +
	"\bwav_file\x18\x02 \x01(\fR\awavFile\"O\n" +
	"\aSegment\x12\x19\n" +
	"\bstart_ms\x18\x01 \x01(\x03R\astartMs\x12\x15\n" +
	"\x06end_ms\x18\x02 \x01(\x03R\x05endMs\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text2Y\n" +
	"\vTranscriber\x12J\n" +
	"\n" +
	"Transcribe\x12!.transcriber.v1.TranscribeRequest\x1a\x17.transcriber.v1.Segment0\x01BJZHgithub.com/ciricc/go-whisper-grpc/pkg/proto/transcriber/v1;transcriberv1b\x06proto3"

var (
	file_transcriber_proto_rawDescOnce sync.Once
	file_transcriber_proto_rawDescData []byte
)

func file_transcriber_proto_rawDescGZIP() []byte {
	file_transcriber_proto_rawDescOnce.Do(func() {
		file_transcriber_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_transcriber_proto_rawDesc), len(file_transcriber_proto_rawDesc)))
	})
	return file_transcriber_proto_rawDescData
}

var file_transcriber_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_transcriber_proto_goTypes = []any{
	(*TranscribeRequest)(nil), // 0: transcriber.v1.TranscribeRequest
	(*Segment)(nil),           // 1: transcriber.v1.Segment
}
var file_transcriber_proto_depIdxs = []int32{
	0, // 0: transcriber.v1.Transcriber.Transcribe:input_type -> transcriber.v1.TranscribeRequest
	1, // 1: transcriber.v1.Transcriber.Transcribe:output_type -> transcriber.v1.Segment
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_transcriber_proto_init() }
func file_transcriber_proto_init() {
	if File_transcriber_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_transcriber_proto_rawDesc), len(file_transcriber_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transcriber_proto_goTypes,
		DependencyIndexes: file_transcriber_proto_depIdxs,
		MessageInfos:      file_transcriber_proto_msgTypes,
	}.Build()
	File_transcriber_proto = out.File
	file_transcriber_proto_goTypes = nil
	file_transcriber_proto_depIdxs = nil
}
